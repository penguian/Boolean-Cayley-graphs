︠50edeafe-5c70-4d7b-8e9b-3f150a9622bb︠
%md
# Clifford bent functions $\sigma$ and $\tau$ up to dimension 8.
︡7c93bc38-9bc9-45c2-90ea-0db2c2e50666︡{"done":true,"md":"# Clifford bent functions $\\sigma$ and $\\tau$ up to dimension 8."}
︠38377f9a-9862-4e0d-b372-e3fb7ea95ffbs︠
load("clifford_bent_functions.sage")
︡a5f69885-6b1c-47db-8a3f-0dba937350a0︡{"done":true}︡
︠9989c948-76a4-4eb5-b7b4-5c8ba1475987s︠
from boolean_cayley_graphs.bent_function_cayley_graph_classification import BentFunctionCayleyGraphClassification
︡7709ac06-231c-4c81-a3b4-24bfd75fd404︡{"done":true}︡
︠8bd97c0f-4fb3-454d-9c1a-83fddd6bb07as︠
import boolean_cayley_graphs.cayley_graph_controls as controls
︡ba9daefb-8830-42bb-95bc-5c6fe76f4db9︡{"done":true}︡
︠fedcf1e8-b943-4efd-8e1b-213dd5f228f7s︠
sigma = sigma_list(5)
︡04893ac4-1056-4518-97d9-c5beefb7aae3︡{"done":true}︡
︠7b20c90c-7980-47d4-a9c5-9cfbb5b38bfas︠
for m in range(1,5):
    print m,':'
    print sigma[m].algebraic_normal_form()
︡6f0c4d00-a7ca-45a1-a8be-595dd4004c48︡{"stdout":"1 :\nx0*x1 + x0\n2 :\nx0*x1 + x0 + x2*x3 + x2\n3 :\nx0*x1 + x0 + x2*x3 + x2 + x4*x5 + x4\n4 :\nx0*x1 + x0 + x2*x3 + x2 + x4*x5 + x4 + x6*x7 + x6\n"}︡{"done":true}︡
︠a7cb4003-10bd-47af-ae7a-b157c2eb27e1s︠
tau = tau_list(5)
︡e885c7a8-440f-430b-aef6-cb8eef2123bd︡{"done":true}︡
︠a9f5b381-52aa-45f2-a1bf-7795300b89ffs︠
for m in range(5):
    print m,':'
    print tau[m].is_partial_spread_minus(certify=True)
︡0e9397dc-7bbb-43ff-b2ae-62020db38f52︡{"stdout":"0 :\n(False, [])"}︡{"stdout":"\n1 :\n(True, [set([2])])\n2 :\n(True, [set([8, 2, 10]), set([11, 5, 14])])\n3 :\n(False, [((0, 1), set([0, 2])), ((0, 2), set([0, 40])), ((0, 3), set([0, 8])), ((0, 4), set([0, 32])), ((0, 5), set([0, 42])), ((0, 6), set([0, 34])), ((0, 7), set([0, 10])), ((1, 2), set([0, 22])), ((1, 3), set([0, 58])), ((1, 4), set([0, 46])), ((1, 5), set([0, 20])), ((1, 6), set([0, 44])), ((1, 7), set([0, 56])), ((2, 3), set([0, 35])), ((2, 4), set([0, 11])), ((2, 5), set([0, 62])), ((2, 6), set([0, 53])), ((2, 7), set([0, 29])), ((3, 4), set([0, 43])), ((3, 5), set([0, 17])), ((3, 6), set([0, 25])), ((3, 7), set([0, 50])), ((4, 5), set([0, 5])), ((4, 6), set([0, 14])), ((4, 7), set([0, 37])), ((5, 6), set([0, 59])), ((5, 7), set([0, 47])), ((6, 7), set([0, 23]))])\n4 :\n(True, [set([224, 2, 150, 40, 188, 42, 226, 200, 116, 190, 118, 148, 92, 202, 94]), set([65, 194, 131, 44, 109, 238, 175, 20, 85, 214, 151, 56, 121, 250, 187]), set([97, 100, 5, 234, 139, 142, 239, 176, 209, 212, 181, 90, 59, 62, 95]), set([128, 163, 145, 136, 171, 50, 8, 17, 178, 35, 43, 153, 25, 186, 58]), set([227, 165, 70, 232, 11, 77, 174, 80, 179, 245, 22, 184, 91, 29, 254]), set([32, 130, 235, 197, 71, 172, 203, 140, 162, 14, 46, 73, 105, 103, 229]), set([160, 133, 10, 119, 143, 82, 221, 88, 242, 170, 215, 248, 47, 125, 37]), set([34, 68, 102, 168, 138, 236, 206, 113, 83, 53, 23, 217, 251, 157, 191])])"}︡{"stdout":"\n"}︡{"done":true}︡
︠4ac48f93-f5ea-45a7-97d5-71d1b1db9579s︠
for m in range(1,4):
    print 'sigma',m,':'
    cs = BentFunctionCayleyGraphClassification.load_mangled('sigma_'+str(m))
    cs.report()
    print ""
    print "weight_class_matrix"
    matrix_plot(cs.weight_class_matrix)
    print ""
    print "bent_cayley_graph_index_matrix"
    matrix_plot(cs.bent_cayley_graph_index_matrix)
    print ""
︡7471e7a2-e3ee-4dd3-b4f6-c6fad6775860︡{"stdout":"sigma 1 :\nAlgebraic normal form of Boolean function: x0*x1 + x0\nFunction is bent.\n\nWeight class matrix:\n[0 1 0 0]\n[0 0 0 1]\n[1 0 0 0]\n[0 0 1 0]\n\nSDP design incidence structure t-design parameters: (True, (1, 4, 1, 1))\n\nClassification of Cayley graphs and classification of Cayley graphs of duals are the same:\n\nMatrix of indices of Cayley graphs:\n[0 1 0 0]\n[0 0 0 1]\n[1 0 0 0]\n[0 0 1 0]\n\nThere are 2 extended Cayley classes in the extended translation class:\n\nFor each extended Cayley class in the extended translation class:\nClique polynomial, strongly regular parameters, rank, and order of a representative graph; and\nlinear code and generator matrix for a representative bent function:\n\nEC class 0 :\nAlgebraic normal form of representative: x0*x1 + x0\nClique polynomial: 2*t^2 + 4*t + 1\nStrongly regular parameters: (4, 1, 0, 0)\nRank: 4 Order: 8\n\nLinear code from representative:\n[1, 1] linear code over GF(2)\nGenerator matrix:\n[1]\nLinear code is projective.\nWeight distribution: {0: 1, 1: 1}\n\nEC class 1 :\nAlgebraic normal form of representative: x0*x1 + x0 + x1\nClique polynomial: t^4 + 4*t^3 + 6*t^2 + 4*t + 1\nStrongly regular parameters: False\nRank: 4 Order: 24\n\nLinear code from representative:\n[3, 2] linear code over GF(2)\nGenerator matrix:\n[1 0 1]\n[0 1 1]\nLinear code is projective.\nWeight distribution: {0: 1, 2: 3}\n\nweight_class_matrix\n"}︡{"file":{"filename":"/projects/80f4c9e7-8a37-4f59-82e7-aa179ec0b652/.sage/temp/compute7-us/21141/tmp_UiJEtU.svg","show":true,"text":null,"uuid":"19087f19-d3c5-4c73-b228-47ce84e2701a"},"once":false}︡{"stdout":"\nbent_cayley_graph_index_matrix\n"}︡{"file":{"filename":"/projects/80f4c9e7-8a37-4f59-82e7-aa179ec0b652/.sage/temp/compute7-us/21141/tmp_OPJ2ew.svg","show":true,"text":null,"uuid":"5b425dbb-5eb2-4c97-b5d8-30ff7fb758ba"},"once":false}︡{"stdout":"\nsigma 2 :\nAlgebraic normal form of Boolean function: x0*x1 + x0 + x2*x3 + x2\nFunction is bent.\n\nWeight class matrix:\n[0 1 0 0 1 0 1 1 0 1 0 0 0 1 0 0]\n[0 0 0 1 1 1 1 0 0 0 0 1 0 0 0 1]\n[1 0 0 0 0 1 1 1 1 0 0 0 1 0 0 0]\n[0 0 1 0 1 1 0 1 0 0 1 0 0 0 1 0]\n[0 1 0 0 0 1 0 0 0 1 0 0 1 0 1 1]\n[0 0 0 1 0 0 0 1 0 0 0 1 1 1 1 0]\n[1 0 0 0 1 0 0 0 1 0 0 0 0 1 1 1]\n[0 0 1 0 0 0 1 0 0 0 1 0 1 1 0 1]\n[1 0 1 1 0 1 0 0 0 1 0 0 0 1 0 0]\n[1 1 1 0 0 0 0 1 0 0 0 1 0 0 0 1]\n[0 1 1 1 1 0 0 0 1 0 0 0 1 0 0 0]\n[1 1 0 1 0 0 1 0 0 0 1 0 0 0 1 0]\n[0 1 0 0 0 1 0 0 1 0 1 1 0 1 0 0]\n[0 0 0 1 0 0 0 1 1 1 1 0 0 0 0 1]\n[1 0 0 0 1 0 0 0 0 1 1 1 1 0 0 0]\n[0 0 1 0 0 0 1 0 1 1 0 1 0 0 1 0]\n\nSDP design incidence structure t-design parameters: (True, (2, 16, 6, 2))\n\nClassification of Cayley graphs and classification of Cayley graphs of duals are the same:\n\nMatrix of indices of Cayley graphs:\n[0 1 0 0 1 0 1 1 0 1 0 0 0 1 0 0]\n[0 0 0 1 1 1 1 0 0 0 0 1 0 0 0 1]\n[1 0 0 0 0 1 1 1 1 0 0 0 1 0 0 0]\n[0 0 1 0 1 1 0 1 0 0 1 0 0 0 1 0]\n[0 1 0 0 0 1 0 0 0 1 0 0 1 0 1 1]\n[0 0 0 1 0 0 0 1 0 0 0 1 1 1 1 0]\n[1 0 0 0 1 0 0 0 1 0 0 0 0 1 1 1]\n[0 0 1 0 0 0 1 0 0 0 1 0 1 1 0 1]\n[1 0 1 1 0 1 0 0 0 1 0 0 0 1 0 0]\n[1 1 1 0 0 0 0 1 0 0 0 1 0 0 0 1]\n[0 1 1 1 1 0 0 0 1 0 0 0 1 0 0 0]\n[1 1 0 1 0 0 1 0 0 0 1 0 0 0 1 0]\n[0 1 0 0 0 1 0 0 1 0 1 1 0 1 0 0]\n[0 0 0 1 0 0 0 1 1 1 1 0 0 0 0 1]\n[1 0 0 0 1 0 0 0 0 1 1 1 1 0 0 0]\n[0 0 1 0 0 0 1 0 1 1 0 1 0 0 1 0]\n\nThere are 2 extended Cayley classes in the extended translation class:\n\nFor each extended Cayley class in the extended translation class:\nClique polynomial, strongly regular parameters, rank, and order of a representative graph; and\nlinear code and generator matrix for a representative bent function:\n\nEC class 0 :\nAlgebraic normal form of representative: x0*x1 + x0 + x2*x3 + x2\nClique polynomial: 8*t^4 + 32*t^3 + 48*t^2 + 16*t + 1\nStrongly regular parameters: (16, 6, 2, 2)\nRank: 6 Order: 1152\n\nLinear code from representative:\n[6, 4] linear code over GF(2)\nGenerator matrix:\n[1 0 0 1 0 0]\n[0 1 0 0 0 1]\n[0 0 1 1 0 0]\n[0 0 0 0 1 1]\nLinear code is projective.\nWeight distribution: {0: 1, 2: 6, 4: 9}\n\nEC class 1 :\nAlgebraic normal form of representative: x0*x1 + x0 + x1 + x2*x3 + x2\nClique polynomial: 16*t^5 + 120*t^4 + 160*t^3 + 80*t^2 + 16*t + 1\nStrongly regular parameters: (16, 10, 6, 6)\nRank: 6 Order: 1920\n\nLinear code from representative:\n[10, 4] linear code over GF(2)\nGenerator matrix:\n[1 0 1 0 0 1 0 0 1 0]\n[0 1 1 0 0 1 1 0 1 1]\n[0 0 0 1 0 0 0 1 1 1]\n[0 0 0 0 1 1 1 1 1 1]\nLinear code is projective.\nWeight distribution: {0: 1, 4: 5, 6: 10}\n\nweight_class_matrix\n"}︡{"file":{"filename":"/projects/80f4c9e7-8a37-4f59-82e7-aa179ec0b652/.sage/temp/compute7-us/21141/tmp_26DMeC.svg","show":true,"text":null,"uuid":"d89a9c45-0405-49df-b49d-9ad3e24abd9e"},"once":false}︡{"stdout":"\nbent_cayley_graph_index_matrix\n"}︡{"file":{"filename":"/projects/80f4c9e7-8a37-4f59-82e7-aa179ec0b652/.sage/temp/compute7-us/21141/tmp_QyLYwc.svg","show":true,"text":null,"uuid":"f254a3a8-b35c-45cf-8552-eeaa81d24e51"},"once":false}︡{"stdout":"\nsigma 3 :\nAlgebraic normal form of Boolean function: x0*x1 + x0 + x2*x3 + x2 + x4*x5 + x4\nFunction is bent.\n\nWeight class matrix:\n64 x 64 dense matrix over Integer Ring\n\nSDP design incidence structure t-design parameters: (True, (2, 64, 28, 12))\n\nClassification of Cayley graphs and classification of Cayley graphs of duals are the same:\n\nMatrix of indices of Cayley graphs:\n64 x 64 dense matrix over Integer Ring\n\nThere are 2 extended Cayley classes in the extended translation class:\n\nFor each extended Cayley class in the extended translation class:\nClique polynomial, strongly regular parameters, rank, and order of a representative graph; and\nlinear code and generator matrix for a representative bent function:\n\nEC class 0 :\nAlgebraic normal form of representative: x0*x1 + x0 + x2*x3 + x2 + x4*x5 + x4\nClique polynomial: 64*t^8 + 512*t^7 + 1792*t^6 + 3584*t^5 + 5376*t^4 + 3584*t^3 + 896*t^2 + 64*t + 1\nStrongly regular parameters: (64, 28, 12, 12)\nRank: 8 Order: 2580480\n\nLinear code from representative:\n[28, 6] linear code over GF(2)\nGenerator matrix:\n[1 0 0 1 0 0 0 0 1 1 1 1 0 1 1 0 0 1 1 0 1 1 0 1 1 0 1 1]\n[0 1 0 0 0 1 0 1 1 1 0 1 1 1 0 0 0 1 0 0 0 1 0 1 0 0 0 1]\n[0 0 1 1 0 0 0 1 1 0 0 1 1 0 1 1 0 0 1 1 0 0 0 0 1 1 0 0]\n[0 0 0 0 1 1 0 0 0 0 1 1 1 1 1 1 0 0 0 0 1 1 0 0 0 0 1 1]\n[0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 1 1 1 1 1 1]\n[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1]\nLinear code is projective.\nWeight distribution: {0: 1, 16: 35, 12: 28}\n\nEC class 1 :\nAlgebraic normal form of representative: x0*x1 + x0 + x1 + x2*x3 + x2 + x4*x5 + x4\nClique polynomial:"}︡{"stdout":" 2304*t^6 + 13824*t^5 + 19200*t^4 + 7680*t^3 + 1152*t^2 + 64*t + 1\nStrongly regular parameters: (64, 36, 20, 20)\nRank: 8 Order: 3317760\n\nLinear code from representative:\n[36, 6] linear code over GF(2)\nGenerator matrix:\n[1 0 1 0 0 1 0 0 1 0 0 1 0 1 1 1 0 1 0 1 1 0 1 1 0 1 0 1 0 1 1 0 1 1 0 1]\n[0 1 1 0 0 1 1 0 1 1 0 0 1 1 0 0 0 1 1 0 0 1 1 0 1 1 0 1 1 0 0 1 1 0 1 1]\n[0 0 0 1 0 0 0 1 1 1 0 1 1 1 0 1 0 0 0 1 0 0 0 1 1 1 0 0 0 1 0 0 0 1 1 1]\n[0 0 0 0 1 1 1 1 1 1 0 0 0 0 1 1 0 0 0 0 1 1 1 1 1 1 0 0 0 0 1 1 1 1 1 1]\n[0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1]\n[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1]\nLinear code is projective.\nWeight distribution: {0: 1, 16: 27, 20: 36}\n\nweight_class_matrix\n"}︡{"file":{"filename":"/projects/80f4c9e7-8a37-4f59-82e7-aa179ec0b652/.sage/temp/compute7-us/21141/tmp_WNCo8L.svg","show":true,"text":null,"uuid":"4486e87b-6778-4985-82c6-0a3f55ac297c"},"once":false}︡{"stdout":"\nbent_cayley_graph_index_matrix\n"}︡{"file":{"filename":"/projects/80f4c9e7-8a37-4f59-82e7-aa179ec0b652/.sage/temp/compute7-us/21141/tmp_Bsq6Ww.svg","show":true,"text":null,"uuid":"48275593-bdf0-4395-8e3f-e4551d83eadf"},"once":false}︡{"stdout":"\n"}︡{"done":true}︡
︠e7fe220e-b88c-4cea-880b-8b168f5bd786︠










